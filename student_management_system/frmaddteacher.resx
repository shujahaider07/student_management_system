<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>