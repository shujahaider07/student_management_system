<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAOZ0lE
        QVR4Xu1beVCV1xXH2maZNE2nyXQ6zTSdSftHZ7qle5NuMzHOlLcCb2EHARFQFgFZhADviQKyuCCKLAKP
        RVFBUBQQBBREUeO+70QTI+4ajbie/s7lPXzAewoGiKbemZ+X9y33nt/vnnvu+b7vavOivCjfTJHL5Yzv
        Ab+VyWRSAbn89/j96rhx48T5b2VhYkqFguvfSaXSQtTnVQ72d9WAQiG/YCuRNuB4LI7/FXhNIpHYQBzj
        3c95YfIKufwHIBQilcpOTfJyp1W56bS3tlSgvngBJcWEkaer80OFQnFZIpE2SaRSnUwm/wD3vq5UKm1w
        3Njac1QEcYViDOr3QWgNRvzOvBnTqbO1kh4e20R0rLUXdw42i+ONpQtpdlwEebm7sBjXIEYr7k3CNPkP
        2nnD2J6xh2e0sOuykcBbmOTx+H0uxN+HNi3Poe4DTYL8/SMbB+Dh0R5R7hxqpjNtVdS0NJsydFHk4+FK
        mD43IEY7xEhDe7bAP4F/WYVc/m/0/0fgpVEVjDuDu38H9UcwtsVRo7q/JF1P5ztqQLzVInFLMIlx93AL
        fdZeTS3li4m9x3eCO9nb2XXbKZW3HgelUvEVbDgH/G1UBUAws3FQOdgqlMquyOAA2r66CCRAiMmD1KDQ
        T4wHOMZi3IMY57auoW3VhdS2MhfIs4j2inxauiCZhboNb/hoVASgXStt6FrbGKpa+OfDJXMbGzITqavO
        QPe3rKLuzRV0u20ldQN38Pfddivgc7j+/r6GASKYYBLjsTixmfbXlRFizm1MwcELwBcCr8pl8r8jAkM8
        Of55PHCtqLGYy+aETNLXJ047uzE5kjalRFFzUiRtS5tOl/Jn0bXCZLqAemdGDLUkReCcZTTNiqCdebOp
        e1+jRQEGAxZhz7qSoQnAFyHCvow6TaFUXLd3sLv7RNgr79qZQa2ye6BR2ZHaoQcqByX5ejnR+rI42rgs
        gWYGeZOz2oEcAa3KMjQO9hSGgHlhW40YbUsEn4SnFgD4C0S4kjwvglasn0PL6zMeiyUVOlpQFE4LDFaA
        cznlUVTemEDRib7k4eYs1vx9WPvZQGs4uRFTAfPdErnB4KkF4ICBke1m8jtOl9G2kyW92HKsmDYfLnqE
        I0VUvyOTytcnPBYrNuhoaX08efs5Uen8JKLjFuZsP/AKYInYYMFtPK0A41kAHl0mvfV4sUD7UQOxV/gH
        elJA0IReTJriTt6TnKzDz5myiqOoalMy+fi70LKsFAjQJvIAa3hatzfHsArQgbppTx55+7pSeFQg5RrS
        KKcoVSAzV0/p2dOtYk5OLNVszkI7BkrMCCdvd1eR3JxoWUknreDarvpBi8CeYslbhk0AHvmm3XmUmB5O
        Gq2K6ltL6LPrW+jM1XZgM+09u0oIxNdawvZTpaLuOFFCjTtzKSp+Mmk0KnJx1JCLk3YAnLUakQbf3Nv4
        RBH4/M4aAx2oXzrg2mERYCvmfBLc3muiqyCfXTCbTnZtpM7LbQLHuzaAXFnvNOkPJm6oSqbFpXraegKe
        BBE2HSigZbXplF2ip4WGBFpY/AiLSnSiP43GgSpz0umekaQ5MXOChxvLhUcVpiWMjADtCHI8z8MiptD6
        1lJB/tMrPeRPX0YHZ1ZZJG5CVct8xIwJ5OSioayieGo9WCBEMPeQPoC3sMfpU0NJq1ZR4RwkUtvW9hJi
        cIy4jWcJzgQn+3rRZBctnajOE8f7C8BPmV9fgGAvWpSfLNzeNPKMg5+vFWQsEefjfL+bpxM5u2rIHXVw
        +EQxBazdY0IHPGXj/iWUkhlJWic1Bfh40lx9tPAIfkosnjeLEiKCyUmrpvAJLrRnbiwyyEqxZLIwJtw9
        1CKmx7AIkJWXLOZ85+XNdOrSJjrwWQ0MLe01mkfPnBj/rUuZShN8XGhNWxZtQAxhUqbzfQDCfL/5MRZh
        yzEDVTTOFd4wMcCdtM4qUmvsSeNkTzKFjDKCfOhMtp5uLs2gzoYySo2PpLjwQCBIIH5aEIVO9uUnSH4W
        GDdkAZbVplHb4UIIMIGycpPg8hvp8Lk62tm5oo+x7LJlNalU15HdKwIHxQysAI7Oapq9IErM9cqmeYKU
        +b1MtBmrS3F1ikWBTMLwuaW1iZS9NIIWlUaQk6uaKuNC6GZRMnWtyKLkmDDCA9h5W4lkDVBlAp5Eq8Fp
        CfDzIQmAlLY7uzRarN0TA1wpLSuGPjm9bICBDJ7XkXGTqbAiqddgJrZhVy7FzggiFzctaRxVIg4UVib1
        iiSuw/WrmudTYJgPrW1f2Odc7zVoq2VvPhWv1omEyrA6lpzdIMDHIdQJD0gNCyCk7Vdhtxvs/y7A7xrN
        MRaZrQ2/UXpiwcW9AnAKy1kcZ288H9nY/saZ0Lwnn9oOFfY5xmTYOxp25NDqTQtEMJwa6SuyR/Pr2o/0
        LLP9vcMEFjWnbAbiiZYKq2KEAC7uaor2dqNgD2fCQ9gXgDdcfSzb/7VKHwGQx5c3JJAPMrnZmVED5qk5
        eJT6H2NCnE7nL59Jiww6ERBjE4MsErV0vwncb+aSOFJr7Sl/ZTQZ1vQIIJXKrktksnLY/A+MML98MbL4
        GsWaAElzI8SIWnJRa+D4EREbQEqlQoDdnAPiUNpgYViAeXmxyEMGCKCHveziRuuHoVgSYKK/Mzlj/upS
        Qql+26NANxjUb18sMr/AUG/h5kMj35N+p8yPFN7j6ORASyqnmwsQMKzkufQRADFgZZOO5heEUbTeF4HM
        XqzlHNwGS4RHj0VYt8VygLMGvrYVMWW6PpBUajuK+Nib0nOmigExxYDREaBZ34MmPc3JDRXrMC9pbByn
        tIMBrxIMS+esgds3VKWAvD3NnDuFVmAgeuzQUdFoC8BLD2MZnuc5HvByxhHdb4rniIHbd3V3xBKqpqLq
        GEGcbRhdARADzAVY0aijefmhlDDbnxJSRgHoJ31xiHB7kw0swGhMgXF2dsrbPPcrWnrczoQKCMLHRg1G
        tzfvf0kFZ5gqFsB/RAQAfgkcY3ePiPN55uAX6EpY9y/DRv5MZrR8mAo3iDWba7lMKlsPlfc+g2iFeR4A
        p71Gy4excN7MQOOvAm8Cbz1jeA32PfsfR1+UF+VFGbHC8x/LNdffB34F/BQYnifCZ70wSaxUHARlWBGa
        IcQXqA+jTlbI5T/6VovA5BgyuVwBwuc+Dg+ktYXzKT9dzy9JH+BYolKpHMOr2LeuGJdmxocY8dO6iGC6
        sH2t+MzGr8GzU+KRHUqP4vzP+LpvpHDH48eP55rfw70EjPXw8Bjc+7jHFG7XiA8kUumh6KmT6fMtq3u/
        BfDH1ur8OQQP6MI1v+ZrR60YDeMA9AsY4GErkWbaSiTlqOtQLwcWYcSC4ba83e2HwJCSGL7WiPdAfk/Y
        lEnU2bqqlzx/Ebq6s45iQ6cQzjfhuteH0v5TF+4EQYfJ8KbHLKlMdkqjVt0P9vcRxugjQ0QdNsWXXJ20
        D407vLZAkDwYmgzorQGCTUG7v+aNVvjbxtZW8i7u3Rzo60XHm1c8Ig/wR5BFyXGE6y/xRhW2izGihTtg
        F8eI+4N4p4+nG5XMn0X76krp6q56YVT3wWZR39jTIL4E8w6vzJkxFI4R9PPyoIkT3MRur/7g4y6Omofo
        4yzg6eXuYjPR080n2M/nIbff/xMYfzFysLfrhi1TYdPIL4XcAfAKOtRhbt+co4+mzk2VwhX5e1z/j5Q8
        Smw0n+MdXl/ubaCL29eJb37WcKxpBaXGRfCcPpMSF/Hfm/saqzngmbfLbW6pzBdiwQPnwlv42cVo5QgV
        7gAqj4FhEfZ2ytv8ne7WvsYBo/I4sCAs0uPAQe3Uxgpyc3Z8sCo79Sx+3+Pjpja4P/4yPAmehClTA7t+
        PCrkjRgPdOWm6oSLmxs2XGCCvDHS09WZqtPj6aHZXiHeDMFeEhnsz+Q/gS2cCdq4u7sbLR2hYiT/E3Ta
        FoXOL+2oHfI+HhaLyT1JNLg8FWTMICcHe9qxMJEeHNggjvN9PIVS48X0+Bz2fGi0y2jlCBXuQKEQETmZ
        d3bsqikGkcFveWWwWFewXNUaMhEMYykDsSNDNxDpuiiMboDYLlcwzZ+uVS6i+4eaRRscQ4oRbDENb0AA
        j6n+PqNDnoH1RYL6YtmC5AHkngQmz3OWExgtRjXIzZHCPJysItHPkxoSw+licRrd6agWW2d59Hl7nRZL
        LVYeHUQY3q9C1opRgLfh+h0xoZPp8ie1Q5r3fO2O1UVieePdHLxDtKtsLl1dm09X1xVYxJd1hdTdsozu
        7lwn2uAVZPfaYhETYIcB9rwxauSxvIyF66cjIostJ0N1fRagfOFs0gdNoiNLUqh7Qwnd29/QZ2M0X2MC
        kxX7CMVWup5t80x+8sQJTL4FNr0zauQZcH071FeYhCWCg8Gt/Rvo1u56enCQVw2O8n03RPLc/gqB7gq8
        6+iG5WJrS03BPFqMB5zE6Kkik8Qg8MvQ35jsGvFi7OgdXmp4ywnn2zxClghag2lETXkCL5ucKXI6uwuj
        WluUSTmzEygtPpKmIz5wqsuPtcjsbqPvi3ie2I3UuRbkQ/D7baNNRgtHsHAnHGTQcaa7ixMdXL/0qVz/
        i61rxKbIvDQdZSREUQyeDYL9vJG9aR+q7O2Z5GWQ3AOSTfyMAIQiwLkjwvPyxv+LjF9wcMot3gCNSmHy
        DLi+BiJcX5mdJrI3SyStgXds1RkWkL+3J29S+hIPMvtBrgUw4MFmGoT1BCHeufUH4E3gFeDZeKXFRgDv
        YiR28/y7gcSDgxJ7wGDALl9fnEUalcM9jG4xhOQvOJyqCpIQ1djTM1iM5F/G6OSokYiszp9DhxqW0YH6
        MrEd9YnAVOmoKiA/b+ToEmkpVpDRWa6GqxgFeA84D9d9oFE73BdQDRK4VuVg/wD3fwr8idt7rgobDPAb
        FSmghSdongJa3Ps+8P/xmvpFeW6Ljc3/ALMrHCAdeaRmAAAAAElFTkSuQmCC
</value>
  </data>
</root>