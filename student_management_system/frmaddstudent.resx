<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>